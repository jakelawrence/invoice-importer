{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["source","axios","CancelToken","customStyles","overlay","position","top","left","right","bottom","backgroundColor","content","marginRight","transform","background","border","width","App","state","fileName","file","uploading","completed","error","modalIsOpen","username","password","progress","numOfBatches","response","cancel","this","cancelUpload","delete","auth","data","invoice_number","event","target","files","length","setState","name","result","a","formattedData","formatData","batch","method","url","maxContentLength","Infinity","maxBodyLength","csv","checkPrevImported","lastImport","cancelToken","token","then","continue","prev_prog","message","catch","error_code","status","e","value","Papa","parse","complete","getData","bind","onBeforeunload","className","isOpen","onRequestClose","closeModal","style","contentLabel","ariaHideApp","onClick","htmlFor","type","id","placeholder","onChange","changeUsername","changePassword","onMouseUp","onSubmit","onFileUpload","accept","getCredentials","percent","Math","round","strokeWidth","strokeColor","resetPage","Component","batches","num_of_batches","ceil","i","slice","forEach","d","concat","join","window","onbeforeunload","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ae800e6e.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"bootswatch/dist/darkly/bootstrap.min.css\";\nimport Papa from \"papaparse\";\nimport \"./App.css\";\nimport axios from \"axios\";\nimport Modal from \"react-modal\";\nimport { Line } from \"rc-progress\";\nimport { Beforeunload } from \"react-beforeunload\";\nconst CancelToken = axios.CancelToken;\nconst source = CancelToken.source();\nvar batch_size = 500;\n\nconst customStyles = {\n  overlay: {\n    position: \"fixed\",\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: \"rgba(0, 0, 0, 0.50)\",\n  },\n  content: {\n    top: \"50%\",\n    left: \"50%\",\n    right: \"auto\",\n    bottom: \"auto\",\n    marginRight: \"-50%\",\n    transform: \"translate(-50%, -50%)\",\n    background: \"#424242\",\n    border: \"none\",\n    width: \"700px\",\n  },\n};\n\nclass App extends Component {\n  state = {\n    fileName: \"\",\n    file: null,\n    uploading: false,\n    completed: false,\n    error: false,\n    modalIsOpen: false,\n    username: \"\",\n    password: \"\",\n    progress: 0,\n    numOfBatches: 1,\n    response: \"\",\n  };\n\n  componentWillUnmount() {\n    if (source) {\n      source.cancel();\n      if (this.state.uploading) {\n        this.cancelUpload();\n      }\n    }\n  }\n\n  cancelUpload() {\n    axios.delete(\"http://localhost:5000/cancel\", {\n      auth: {\n        username: this.state.username,\n        password: this.state.password,\n      },\n      data: {\n        invoice_number: \"0000003Y28X9211\",\n      },\n    });\n  }\n\n  onFileUpload(event) {\n    if (event.target.files.length) {\n      this.setState({\n        fileName: event.target.files[0].name,\n        file: event.target.files[0],\n        data: null,\n      });\n    }\n  }\n\n  closeModal() {\n    this.setState({ modalIsOpen: false });\n  }\n\n  openModal() {\n    this.setState({ modalIsOpen: true });\n  }\n\n  async getData(result) {\n    var formattedData = formatData(result.data);\n    this.setState({ numOfBatches: formattedData.length });\n    for (const batch in formattedData) {\n      await axios({\n        method: \"post\",\n        url: \"http://localhost:5000/import\",\n        auth: {\n          username: this.state.username,\n          password: this.state.password,\n        },\n        maxContentLength: Infinity,\n        maxBodyLength: Infinity,\n        data: {\n          csv: formattedData[batch],\n          checkPrevImported: batch,\n          lastImport: batch < formattedData.length - 1,\n        },\n        cancelToken: source.token,\n      })\n        .then((response) => {\n          if (response.data.continue) {\n            var prev_prog = this.state.progress;\n            this.setState({ progress: prev_prog + 1 });\n          } else {\n            this.setState({\n              response: response.data.message,\n              completed: true,\n            });\n          }\n        })\n        .catch((error) => {\n          var error_code = error.response;\n          if (error_code && error_code.status === 401) {\n            this.setState({ response: \"Invalid Credentials\", error: true });\n          } else if (error_code && error_code === 503) {\n            this.setState({\n              response: \"Error Occured Connecting to Database\",\n              error: true,\n            });\n          } else {\n            this.setState({\n              response: \"Something went wrong, whoops!\",\n              error: true,\n            });\n          }\n        });\n\n      if (this.state.error || this.state.completed) {\n        break;\n      }\n    }\n    this.setState({\n      uploading: false,\n      completed: true,\n    });\n  }\n\n  changeUsername(e) {\n    this.setState({ username: e.target.value });\n  }\n\n  changePassword(e) {\n    this.setState({ password: e.target.value });\n  }\n\n  async onSubmit() {\n    this.setState({ uploading: true, modalIsOpen: false });\n    Papa.parse(this.state.file, {\n      complete: this.getData.bind(this),\n    });\n  }\n\n  getCredentials() {\n    if (this.state.file) {\n      this.setState({ modalIsOpen: true });\n    }\n  }\n\n  resetPage() {\n    this.setState({\n      fileName: \"\",\n      file: null,\n      uploading: false,\n      completed: false,\n      error: false,\n      modalIsOpen: false,\n      username: \"\",\n      password: \"\",\n      progress: 0,\n      numOfBatches: 1,\n      response: \"\",\n    });\n  }\n\n  render() {\n    return (\n      <Beforeunload onBeforeunload={() => \"You’ll lose your data!\"}>\n        <div className=\"App p-5\">\n          <Modal\n            isOpen={this.state.modalIsOpen}\n            onRequestClose={this.closeModal.bind(this)}\n            style={customStyles}\n            contentLabel=\"API Credentials\"\n            ariaHideApp={false}\n          >\n            <button\n              className=\"btn btn-danger\"\n              onClick={this.closeModal.bind(this)}\n            >\n              close\n            </button>\n            <div className=\"d-flex flex-column m-2 p-5\">\n              <h3 className=\"pb-2\">Enter Credentials</h3>\n              <div className=\"form-group\">\n                <label className=\"py-2\" htmlFor=\"username\">\n                  Username\n                </label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"username\"\n                  placeholder=\"username\"\n                  onChange={this.changeUsername.bind(this)}\n                ></input>\n              </div>\n              <div className=\"form-group\">\n                <label className=\"py-2\" htmlFor=\"password\">\n                  Password\n                </label>\n                <input\n                  type=\"password\"\n                  className=\"form-control\"\n                  id=\"password\"\n                  placeholder=\"password\"\n                  onChange={this.changePassword.bind(this)}\n                ></input>\n              </div>\n              <button\n                onMouseUp={() => this.onSubmit()}\n                className=\"btn btn-primary mt-5\"\n              >\n                Submit\n              </button>\n            </div>\n          </Modal>\n          <h1 className=\"p-5\">Import Invoice Charges</h1>\n          <div className=\"bg-secondary m-auto w-50 d-flex flex-column p-5 rounded\">\n            {!this.state.uploading && !this.state.completed && (\n              <>\n                <h4>Choose a file to import...</h4>\n                <form className=\"p-5\">\n                  <label htmlFor=\"file-upload\" className=\"custom-file-upload\">\n                    Upload File\n                  </label>\n                  <input\n                    onChange={(event) => this.onFileUpload(event)}\n                    id=\"file-upload\"\n                    type=\"file\"\n                    accept=\".csv\"\n                  />\n                  <div className=\"p-2\">{this.state.fileName}</div>\n                </form>\n                <button\n                  onMouseUp={() => this.getCredentials()}\n                  className=\"btn btn-primary mx-5\"\n                >\n                  Import\n                </button>\n              </>\n            )}\n            {this.state.uploading && !this.state.completed && (\n              <div className=\"d-flex flex-column\">\n                <h4>Importing...</h4>\n                <div className=\"p-3\">\n                  <Line\n                    percent={Math.round(\n                      (this.state.progress / this.state.numOfBatches) * 100\n                    )}\n                    strokeWidth=\"1.2\"\n                    strokeColor=\"#00bc8c\"\n                  />\n                </div>\n\n                {Math.round(\n                  (this.state.progress / this.state.numOfBatches) * 100\n                )}\n                {\"%\"}\n              </div>\n            )}\n            {!this.state.uploading &&\n              this.state.completed &&\n              !this.state.error && (\n                <div className=\"d-flex flex-column\">\n                  <h4>{this.state.response}</h4>\n                  <button\n                    onMouseUp={() => this.resetPage()}\n                    className=\"btn btn-primary m-5\"\n                  >\n                    Import Another File\n                  </button>\n                </div>\n              )}\n            {!this.state.uploading && this.state.completed && this.state.error && (\n              <div className=\"d-flex flex-column\">\n                <h4>{this.state.response}</h4>\n                <button\n                  onMouseUp={() => this.resetPage()}\n                  className=\"btn btn-danger m-5\"\n                >\n                  Try Again\n                </button>\n              </div>\n            )}\n          </div>\n        </div>\n      </Beforeunload>\n    );\n  }\n}\n\nwindow.onbeforeunload = function () {\n  return \"\";\n};\n\nfunction formatData(data) {\n  var batches = [];\n  var num_of_batches = Math.ceil(data.length / batch_size);\n\n  for (let i = 0; i < num_of_batches; i++) {\n    batches[i] = \"\";\n    var sliced_data = data.slice(i * batch_size, (i + 1) * batch_size);\n    sliced_data.forEach((d) => {\n      batches[i] = batches[i].concat(d.join(\"!@#\"));\n      batches[i] = batches[i].concat(\"\\n\");\n    });\n  }\n  return batches;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}