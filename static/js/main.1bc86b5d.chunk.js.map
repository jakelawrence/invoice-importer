{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["customStyles","overlay","position","top","left","right","bottom","backgroundColor","content","marginRight","transform","background","border","width","formatData","data","formattedData","forEach","d","concat","join","App","state","fileName","file","uploading","completed","error","modalIsOpen","username","password","event","this","setState","target","files","name","result","a","console","log","message","isError","axios","method","url","auth","maxContentLength","Infinity","maxBodyLength","csv","then","response","catch","status","e","value","Papa","parse","complete","getData","bind","className","isOpen","onRequestClose","closeModal","style","contentLabel","ariaHideApp","onClick","htmlFor","type","id","placeholder","onChange","changeUsername","changePassword","onMouseUp","onSubmit","onFileUpload","getCredentials","role","resetPage","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1bc86b5d.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"bootswatch/dist/darkly/bootstrap.min.css\";\nimport Papa from \"papaparse\";\nimport \"./App.css\";\nimport axios from \"axios\";\nimport Modal from \"react-modal\";\n\nconst customStyles = {\n  overlay: {\n    position: \"fixed\",\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: \"rgba(0, 0, 0, 0.50)\",\n  },\n  content: {\n    top: \"50%\",\n    left: \"50%\",\n    right: \"auto\",\n    bottom: \"auto\",\n    marginRight: \"-50%\",\n    transform: \"translate(-50%, -50%)\",\n    background: \"#424242\",\n    border: \"none\",\n    width: \"700px\",\n  },\n};\n\nclass App extends Component {\n  state = {\n    fileName: \"\",\n    file: null,\n    uploading: false,\n    completed: false,\n    error: false,\n    modalIsOpen: false,\n    username: \"\",\n    password: \"\",\n  };\n\n  onFileUpload(event) {\n    this.setState({\n      fileName: event.target.files[0].name,\n      file: event.target.files[0],\n      data: null,\n    });\n  }\n\n  closeModal() {\n    this.setState({ modalIsOpen: false });\n  }\n\n  openModal() {\n    this.setState({ modalIsOpen: true });\n  }\n\n  async getData(result) {\n    var formattedData = formatData(result.data);\n    console.log(\"Hello\");\n    var message = \"\";\n    var isError = false;\n    await axios({\n      method: \"post\",\n      url: \"http://localhost:5000/import\",\n      auth: {\n        username: this.state.username,\n        password: this.state.password,\n      },\n      maxContentLength: Infinity,\n      maxBodyLength: Infinity,\n      data: {\n        csv: formattedData,\n      },\n    })\n      .then(function (response) {\n        message = response.data;\n      })\n      .catch(function (error) {\n        if (error.response.status === 401) {\n          message = \"Invalid Credentials\";\n          isError = true;\n        }\n      });\n    if (isError) {\n      this.setState({\n        uploading: false,\n        completed: true,\n        error: true,\n        response: message,\n      });\n    } else {\n      this.setState({\n        uploading: false,\n        completed: true,\n        response: message,\n      });\n    }\n  }\n\n  changeUsername(e) {\n    this.setState({ username: e.target.value });\n  }\n\n  changePassword(e) {\n    this.setState({ password: e.target.value });\n  }\n\n  async onSubmit() {\n    this.setState({ uploading: true, modalIsOpen: false });\n    Papa.parse(this.state.file, {\n      complete: this.getData.bind(this),\n    });\n  }\n\n  getCredentials() {\n    if (this.state.file) {\n      this.setState({ modalIsOpen: true });\n    }\n  }\n\n  resetPage() {\n    this.setState({ completed: false, fileName: \"\", file: null });\n  }\n\n  render() {\n    return (\n      <div className=\"App p-5\">\n        <Modal\n          isOpen={this.state.modalIsOpen}\n          onRequestClose={this.closeModal.bind(this)}\n          style={customStyles}\n          contentLabel=\"API Credentials\"\n          ariaHideApp={false}\n        >\n          <button\n            className=\"btn btn-primary\"\n            onClick={this.closeModal.bind(this)}\n          >\n            close\n          </button>\n          <div className=\"d-flex flex-column m-2 p-5\">\n            <h3 className=\"pb-2\">Enter Credentials</h3>\n            <div className=\"form-group\">\n              <label className=\"py-2\" htmlFor=\"username\">\n                Username\n              </label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"username\"\n                placeholder=\"username\"\n                onChange={this.changeUsername.bind(this)}\n              ></input>\n            </div>\n            <div className=\"form-group\">\n              <label className=\"py-2\" htmlFor=\"password\">\n                Password\n              </label>\n              <input\n                type=\"password\"\n                className=\"form-control\"\n                id=\"password\"\n                placeholder=\"password\"\n                onChange={this.changePassword.bind(this)}\n              ></input>\n            </div>\n            <button\n              onMouseUp={() => this.onSubmit()}\n              className=\"btn btn-primary mt-5\"\n            >\n              Submit\n            </button>\n          </div>\n        </Modal>\n        <h1 className=\"p-5\">Import Invoice Charges</h1>\n        <div className=\"bg-secondary m-auto w-50 d-flex flex-column p-5\">\n          {!this.state.uploading && !this.state.completed && (\n            <>\n              Choose a file to import...\n              <form className=\"p-5\">\n                <label htmlFor=\"file-upload\" className=\"custom-file-upload\">\n                  Upload File\n                </label>\n                <input\n                  onChange={(event) => this.onFileUpload(event)}\n                  id=\"file-upload\"\n                  type=\"file\"\n                />\n                <div className=\"p-2\">{this.state.fileName}</div>\n              </form>\n              <button\n                onMouseUp={() => this.getCredentials()}\n                className=\"btn btn-primary mx-5\"\n              >\n                Import\n              </button>\n            </>\n          )}\n          {this.state.uploading && !this.state.completed && (\n            <div className=\"d-flex flex-column\">\n              Importing...\n              <div className=\"spinner-border m-auto mt-3\" role=\"status\"></div>\n            </div>\n          )}\n          {!this.state.uploading && this.state.completed && !this.state.error && (\n            <div className=\"d-flex flex-column\">\n              {this.state.response}\n              <button\n                onMouseUp={() => this.resetPage()}\n                className=\"btn btn-primary m-5\"\n              >\n                Import Another File\n              </button>\n            </div>\n          )}\n          {!this.state.uploading && this.state.completed && this.state.error && (\n            <div className=\"d-flex flex-column\">\n              {this.state.response}\n              <button\n                onMouseUp={() => this.resetPage()}\n                className=\"btn btn-danger m-5\"\n              >\n                Try Again\n              </button>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction formatData(data) {\n  var formattedData = \"\";\n  data.forEach((d) => {\n    formattedData = formattedData.concat(d.join(\"!@#\"));\n    formattedData = formattedData.concat(\"\\n\");\n  });\n  return formattedData;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}